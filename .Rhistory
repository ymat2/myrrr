devtools::document()
devtools::check()
devtools::document()
devtools::check()
devtools::document()
devtools::document()
devtools::check()
devtools::check()
devtools::check()
devtools::check()
devtools::check()
devtools::check()
devtools::check()
devtools::check()
rtracklayer::import("../data-raw/GRCg7b.gff", format = "gff")
rtracklayer::import("data-raw/GRCg7b.gff", format = "gff")
rtracklayer::import("/data-raw/GRCg7b.gff", format = "gff")
devtools::check()
devtools::check()
?dplyr::sym
?dplyr::sym
devtools::check()
syms(c("cyl", "am"))
syms(c("cyl", "am")) |> unlist()
dplyr::syms(c("cyl", "am")) |> unlist()
dplyr::syms(c("cyl", "am")) |> unlist() |> class
dplyr::syms(c("cyl", "am")) |> unlist() |> class()
dplyr::syms(c("cyl", "am")) |> class()
dplyr::syms(c("cyl", "am"))
dplyr::syms(c("cyl", "am")) |> as.vector()
dplyr::syms(c("cyl", "am")) |> as.vector() |> class()
purrr::map(c("cyl", "am"), dplyr::sym())
purrr::map(c("cyl", "am"), dplyr::sym())
?purrr::map
purrr::map_chr(c("cyl", "am"), dplyr::sym)
purrr::map_vec(c("cyl", "am"), dplyr::sym)
dplyr::syms(c("cyl", "am"))
unlist(dplyr::syms(c("cyl", "am")))
purrr::map_chr(c("cyl", "am"), dplyr::sym)
devtools::check()
devtools::check()
devtools::check()
devtools::check()
library(ggplot2)
g = ggplot(mpg) +
aes(x = drv, y = cty, color = cyl) +
geom_point(size = 2) +
theme_bw()
g
g = ggplot(mpg) +
aes(x = drv, y = cyl, color = drv) +
geom_point(size = 2) +
theme_bw()
g
g = ggplot(mpg) +
aes(x = cty, y = hwy, color = drv) +
geom_point(size = 2) +
theme_bw()
g
}
#' Custom theme for ggplot2
#'
#' @description
#' `theme_my()` slightly modifies [ggplot2::theme_bw()] or [ggplot2::theme_test()]
#' @rdname ggtheme
#' @export
theme_my = function(theme = "bw", base_size = 11, base_family = "",
base_line_size = base_size/22,
base_rect_size = base_size/22) {
if (theme == "bw") {
ggplot2::theme_bw(
base_size = base_size,
base_family = base_family,
base_line_size = base_line_size,
base_rect_size = base_rect_size
) +
ggplot2::theme(
panel.background = ggplot2::element_rect(fill = NA, color = NA),
panel.grid.minor = ggplot2::element_blank(),
axis.title = ggplot2::element_text(colour = "#444444"),
axis.text = ggplot2::element_text(colour = "#444444"),
axis.line = ggplot2::element_line(colour = "#444444"),
axis.ticks = ggplot2::element_line(colour = "#444444"),
legend.title = ggplot2::element_text(colour = "#444444"),
legend.text = ggplot2::element_text(colour = "#444444"),
legend.background = ggplot2::element_rect(fill = NA),
legend.key = ggplot2::element_rect(fill = NA)
)
}
}
g = ggplot(mpg) +
aes(x = cty, y = hwy, color = drv) +
geom_point(size = 2) +
theme_my()
g
g = ggplot(mpg) +
aes(x = cty, y = hwy, color = drv) +
geom_point(size = 2) +
theme_my(base_size = 16)
g
}
#' Custom theme for ggplot2
#'
#' @description
#' `theme_my()` slightly modifies [ggplot2::theme_bw()] or [ggplot2::theme_test()]
#' @rdname ggtheme
#' @export
theme_my = function(theme = "bw", base_size = 11, base_family = "",
base_line_size = base_size/22,
base_rect_size = base_size/22) {
if (theme == "bw") {
ggplot2::theme_bw(
base_size = base_size,
base_family = base_family,
base_line_size = base_line_size,
base_rect_size = base_rect_size
) +
ggplot2::theme(
panel.background = ggplot2::element_rect(fill = NA, color = NA),
panel.grid.minor = ggplot2::element_blank(),
axis.title = ggplot2::element_text(colour = "#444444"),
axis.text = ggplot2::element_text(colour = "#444444"),
axis.line = ggplot2::element_line(colour = "#444444"),
axis.ticks = ggplot2::element_line(colour = "#444444"),
legend.title = ggplot2::element_text(colour = "#444444"),
legend.text = ggplot2::element_text(colour = "red"),
legend.background = ggplot2::element_rect(fill = NA),
legend.key = ggplot2::element_rect(fill = NA)
)
}
}
g = ggplot(mpg) +
aes(x = cty, y = hwy, color = drv) +
geom_point(size = 2) +
theme_my(base_size = 16)
g
#' Custom theme for ggplot2
#'
#' @description
#' `theme_my()` slightly modifies [ggplot2::theme_bw()] or [ggplot2::theme_test()]
#' @rdname ggtheme
#' @export
theme_my = function(theme = "bw", base_size = 11, base_family = "",
base_line_size = base_size/22,
base_rect_size = base_size/22) {
if (theme == "bw") {
ggplot2::theme_bw(
base_size = base_size,
base_family = base_family,
base_line_size = base_line_size,
base_rect_size = base_rect_size
) +
ggplot2::theme(
panel.background = ggplot2::element_rect(fill = NA, color = NA),
panel.grid.minor = ggplot2::element_blank(),
axis.title = ggplot2::element_text(colour = "#444444"),
axis.text = ggplot2::element_text(colour = "#444444"),
axis.line = ggplot2::element_line(colour = "#444444"),
axis.ticks = ggplot2::element_line(colour = "#444444"),
legend.title = ggplot2::element_text(colour = "red"),
legend.text = ggplot2::element_text(colour = "#444444"),
legend.background = ggplot2::element_rect(fill = NA),
legend.key = ggplot2::element_rect(fill = NA)
)
}
}
library(ggplot2)
g = ggplot(mpg) +
aes(x = cty, y = hwy, color = drv) +
geom_point(size = 2) +
theme_my(base_size = 16)
g
usus
g = ggplot(mpg) +
aes(x = cty, y = hwy, color = drv) +
geom_point(size = 2) +
theme_my(base_size = 16)
#' Custom theme for ggplot2
#'
#' @description
#' `theme_my()` slightly modifies [ggplot2::theme_bw()] or [ggplot2::theme_test()]
#' @rdname ggtheme
#' @export
theme_my = function(theme = "bw", base_size = 11, base_family = "",
base_line_size = base_size/22,
base_rect_size = base_size/22) {
if (theme == "bw") {
ggplot2::theme_bw(
base_size = base_size,
base_family = base_family,
base_line_size = base_line_size,
base_rect_size = base_rect_size
) +
ggplot2::theme(
panel.background = ggplot2::element_rect(fill = NA, color = NA),
panel.grid.minor = ggplot2::element_blank(),
axis.title = ggplot2::element_text(colour = "#444444"),
axis.text = ggplot2::element_text(colour = "#444444"),
axis.line = ggplot2::element_line(colour = "red"),
axis.ticks = ggplot2::element_line(colour = "#444444"),
legend.title = ggplot2::element_text(colour = "#444444"),
legend.text = ggplot2::element_text(colour = "#444444"),
legend.background = ggplot2::element_rect(fill = NA),
legend.key = ggplot2::element_rect(fill = NA)
)
}
}
g = ggplot(mpg) +
aes(x = cty, y = hwy, color = drv) +
geom_point(size = 2) +
theme_my(base_size = 16)
g
#' Custom theme for ggplot2
#'
#' @description
#' `theme_my()` slightly modifies [ggplot2::theme_bw()] or [ggplot2::theme_test()]
#' @rdname ggtheme
#' @export
theme_my = function(theme = "bw", base_size = 11, base_family = "",
base_line_size = base_size/22,
base_rect_size = base_size/22) {
if (theme == "bw") {
ggplot2::theme_bw(
base_size = base_size,
base_family = base_family,
base_line_size = base_line_size,
base_rect_size = base_rect_size
) +
ggplot2::theme(
panel.background = ggplot2::element_rect(fill = NA, color = NA),
panel.grid.minor = ggplot2::element_blank(),
axis.title = ggplot2::element_text(colour = "#444444"),
axis.text = ggplot2::element_text(colour = "#444444"),
axis.line = ggplot2::element_line(colour = "red"),
axis.line.r = ggplot2::element_line(colour = "green"),
axis.ticks = ggplot2::element_line(colour = "#444444"),
legend.title = ggplot2::element_text(colour = "#444444"),
legend.text = ggplot2::element_text(colour = "#444444"),
legend.background = ggplot2::element_rect(fill = NA),
legend.key = ggplot2::element_rect(fill = NA)
)
}
}
library(ggplot2)
g = ggplot(mpg) +
aes(x = cty, y = hwy, color = drv) +
geom_point(size = 2) +
theme_my(base_size = 16)
g
#' Custom theme for ggplot2
#'
#' @description
#' `theme_my()` slightly modifies [ggplot2::theme_bw()] or [ggplot2::theme_test()]
#' @rdname ggtheme
#' @export
theme_my = function(theme = "bw", base_size = 11, base_family = "",
base_line_size = base_size/22,
base_rect_size = base_size/22) {
if (theme == "bw") {
ggplot2::theme_bw(
base_size = base_size,
base_family = base_family,
base_line_size = base_line_size,
base_rect_size = base_rect_size
) +
ggplot2::theme(
panel.background = ggplot2::element_rect(fill = NA, color = NA),
panel.grid.minor = ggplot2::element_blank(),
axis.title = ggplot2::element_text(colour = "#444444"),
axis.text = ggplot2::element_text(colour = "#444444"),
axis.line = ggplot2::element_line(colour = "red"),
axis.line.x.top = ggplot2::element_line(colour = "green"),
axis.ticks = ggplot2::element_line(colour = "#444444"),
legend.title = ggplot2::element_text(colour = "#444444"),
legend.text = ggplot2::element_text(colour = "#444444"),
legend.background = ggplot2::element_rect(fill = NA),
legend.key = ggplot2::element_rect(fill = NA)
)
}
}
g = ggplot(mpg) +
aes(x = cty, y = hwy, color = drv) +
geom_point(size = 2) +
theme_my(base_size = 16)
g
#' Custom theme for ggplot2
#'
#' @description
#' `theme_my()` slightly modifies [ggplot2::theme_bw()] or [ggplot2::theme_test()]
#' @rdname ggtheme
#' @export
theme_my = function(theme = "bw", base_size = 11, base_family = "",
base_line_size = base_size/22,
base_rect_size = base_size/22) {
if (theme == "bw") {
ggplot2::theme_bw(
base_size = base_size,
base_family = base_family,
base_line_size = base_line_size,
base_rect_size = base_rect_size
) +
ggplot2::theme(
panel.background = ggplot2::element_rect(fill = NA, color = NA),
panel.grid.minor = ggplot2::element_blank(),
axis.title = ggplot2::element_text(colour = "#444444"),
axis.text = ggplot2::element_text(colour = "#444444"),
#axis.line = ggplot2::element_line(colour = "#444444"),
axis.line.r = ggplot2::element_line(colour = "red"),
axis.ticks = ggplot2::element_line(colour = "#444444"),
legend.title = ggplot2::element_text(colour = "#444444"),
legend.text = ggplot2::element_text(colour = "#444444"),
legend.background = ggplot2::element_rect(fill = NA),
legend.key = ggplot2::element_rect(fill = NA)
)
}
}
g = ggplot(mpg) +
aes(x = cty, y = hwy, color = drv) +
geom_point(size = 2) +
theme_my(base_size = 16)
g
g = ggplot(mpg) +
aes(x = cty, y = hwy, color = drv) +
geom_point(size = 2) +
theme_my(base_size = 16) +
theme(legend.position = "inside")
g
g = ggplot(mpg) +
aes(x = cty, y = hwy, color = drv) +
geom_point(size = 2) +
theme_my(base_size = 16, theme = "test") +
theme(legend.position = "inside")
g
#' Custom theme for ggplot2
#'
#' @description
#' `theme_my()` slightly modifies [ggplot2::theme_bw()] or [ggplot2::theme_test()]
#' @rdname ggtheme
#' @export
theme_my = function(theme = "bw", base_size = 11, base_family = "",
base_line_size = base_size/22,
base_rect_size = base_size/22) {
common_theme = function() {
ggplot2::theme(
panel.background = ggplot2::element_rect(fill = NA, color = NA),
axis.title = ggplot2::element_text(colour = "#444444"),
axis.text = ggplot2::element_text(colour = "#444444"),
axis.line = ggplot2::element_line(colour = "#444444"),
axis.ticks = ggplot2::element_line(colour = "#444444"),
legend.title = ggplot2::element_text(colour = "#444444"),
legend.text = ggplot2::element_text(colour = "#444444"),
legend.background = ggplot2::element_rect(fill = NA),
legend.key = ggplot2::element_rect(fill = NA)
)
}
if (theme == "bw") {
ggplot2::theme_bw(
base_size = base_size,
base_family = base_family,
base_line_size = base_line_size,
base_rect_size = base_rect_size
) +
common_theme() +
ggplot2::theme(panel.grid.minor = ggplot2::element_blank())
} elif (theme == "test") {
#' Custom theme for ggplot2
#'
#' @description
#' `theme_my()` slightly modifies [ggplot2::theme_bw()] or [ggplot2::theme_test()]
#' @rdname ggtheme
#' @export
theme_my = function(theme = "bw", base_size = 11, base_family = "",
base_line_size = base_size/22,
base_rect_size = base_size/22) {
common_theme = function() {
ggplot2::theme(
panel.background = ggplot2::element_rect(fill = NA, color = NA),
axis.title = ggplot2::element_text(colour = "#444444"),
axis.text = ggplot2::element_text(colour = "#444444"),
axis.line = ggplot2::element_line(colour = "#444444"),
axis.ticks = ggplot2::element_line(colour = "#444444"),
legend.title = ggplot2::element_text(colour = "#444444"),
legend.text = ggplot2::element_text(colour = "#444444"),
legend.background = ggplot2::element_rect(fill = NA),
legend.key = ggplot2::element_rect(fill = NA)
)
}
if (theme == "bw") {
ggplot2::theme_bw(
base_size = base_size,
base_family = base_family,
base_line_size = base_line_size,
base_rect_size = base_rect_size
) +
common_theme() +
ggplot2::theme(panel.grid.minor = ggplot2::element_blank())
} else if (theme == "test") {
ggplot2::theme_test(
base_size = base_size,
base_family = base_family,
base_line_size = base_line_size,
base_rect_size = base_rect_size
) +
common_theme()
}
}
g = ggplot(mpg) +
aes(x = cty, y = hwy, color = drv) +
geom_point(size = 2) +
theme_my(base_size = 16, theme = "test") +
theme(legend.position = "inside")
g
#' Custom theme for ggplot2
#'
#' @description
#' `theme_my()` slightly modifies [ggplot2::theme_bw()] or [ggplot2::theme_test()]
#' @rdname ggtheme
#' @export
theme_my = function(theme = "bw", base_size = 11, base_family = "",
base_line_size = base_size/22,
base_rect_size = base_size/22) {
common_theme = function() {
ggplot2::theme(
panel.background = ggplot2::element_rect(fill = NA, color = NA),
axis.title = ggplot2::element_text(colour = "#444444"),
axis.text = ggplot2::element_text(colour = "red"),
axis.line = ggplot2::element_line(colour = "#444444"),
axis.ticks = ggplot2::element_line(colour = "#444444"),
legend.title = ggplot2::element_text(colour = "#444444"),
legend.text = ggplot2::element_text(colour = "#444444"),
legend.background = ggplot2::element_rect(fill = NA),
legend.key = ggplot2::element_rect(fill = NA)
)
}
if (theme == "bw") {
ggplot2::theme_bw(
base_size = base_size,
base_family = base_family,
base_line_size = base_line_size,
base_rect_size = base_rect_size
) +
common_theme() +
ggplot2::theme(panel.grid.minor = ggplot2::element_blank())
} else if (theme == "test") {
ggplot2::theme_test(
base_size = base_size,
base_family = base_family,
base_line_size = base_line_size,
base_rect_size = base_rect_size
) +
common_theme()
}
}
g = ggplot(mpg) +
aes(x = cty, y = hwy, color = drv) +
geom_point(size = 2) +
theme_my(base_size = 16, theme = "test") +
theme(legend.position = "inside")
g
#' Custom theme for ggplot2
#'
#' @description
#' `theme_my()` slightly modifies [ggplot2::theme_bw()] or [ggplot2::theme_test()]
#' @rdname ggtheme
#' @export
theme_my = function(theme = "bw", base_size = 11, base_family = "",
base_line_size = base_size/22,
base_rect_size = base_size/22) {
common_theme = function() {
ggplot2::theme(
panel.background = ggplot2::element_rect(fill = NA, color = NA),
axis.title = ggplot2::element_text(colour = "#444444"),
axis.text = ggplot2::element_text(colour = "#444444"),
axis.line = ggplot2::element_line(colour = "#444444"),
axis.ticks = ggplot2::element_line(colour = "#444444"),
legend.title = ggplot2::element_text(colour = "#444444"),
legend.text = ggplot2::element_text(colour = "#444444"),
legend.background = ggplot2::element_rect(fill = NA),
legend.key = ggplot2::element_rect(fill = NA)
)
}
if (theme == "bw") {
ggplot2::theme_bw(
base_size = base_size,
base_family = base_family,
base_line_size = base_line_size,
base_rect_size = base_rect_size
) +
common_theme() +
ggplot2::theme(panel.grid.minor = ggplot2::element_blank())
} else if (theme == "test") {
ggplot2::theme_test(
base_size = base_size,
base_family = base_family,
base_line_size = base_line_size,
base_rect_size = base_rect_size
) +
common_theme()
}
}
g = ggplot(mpg) +
aes(x = cty, y = hwy, color = drv) +
geom_point(size = 2) +
theme_my(base_size = 16, theme = "test") +
theme(legend.position = "inside")
g
devtools::check()
devtools::check()
?ggplot2::theme_bw
?ggplot2::theme_bw
devtools::check()
devtools::check()
